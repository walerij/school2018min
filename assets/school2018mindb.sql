-- phpMyAdmin SQL Dump
-- version 4.4.15.5
-- http://www.phpmyadmin.net
--
-- Хост: 127.0.0.1:3306
-- Время создания: Мар 05 2018 г., 19:05
-- Версия сервера: 5.5.48
-- Версия PHP: 5.6.19

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- База данных: `school2018mindb`
--

-- --------------------------------------------------------

--
-- Структура таблицы `access`
--

CREATE TABLE IF NOT EXISTS `access` (
  `id` int(11) NOT NULL,
  `pupil_id` int(11) NOT NULL,
  `payment_id` int(11) DEFAULT NULL,
  `packet` varchar(20) COLLATE latin1_general_ci NOT NULL,
  `status` varchar(4) COLLATE latin1_general_ci NOT NULL DEFAULT 'open',
  `access_from` date NOT NULL,
  `access_till` date NOT NULL,
  `info` text CHARACTER SET utf8 NOT NULL,
  `bonus_till` date DEFAULT NULL
) ENGINE=InnoDB AUTO_INCREMENT=3830 DEFAULT CHARSET=latin1 COLLATE=latin1_general_ci;

-- --------------------------------------------------------

--
-- Структура таблицы `course`
--

CREATE TABLE IF NOT EXISTS `course` (
  `id` int(11) NOT NULL,
  `course` varchar(255) DEFAULT NULL,
  `courl` varchar(255) DEFAULT NULL,
  `info` varchar(255) DEFAULT NULL,
  `access` varchar(255) DEFAULT NULL,
  `author_id` int(11) DEFAULT NULL,
  `lessons` int(11) DEFAULT NULL,
  `techno` varchar(255) DEFAULT NULL,
  `tier` int(11) DEFAULT NULL,
  `step` int(11) DEFAULT NULL,
  `stat_reports` int(11) DEFAULT NULL,
  `stat_videos` int(11) DEFAULT NULL,
  `stat_stars` double DEFAULT NULL,
  `stat_lessons` int(11) DEFAULT NULL,
  `stat_duration` time DEFAULT NULL,
  `is_active` int(11) DEFAULT NULL
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `course`
--

INSERT INTO `course` (`id`, `course`, `courl`, `info`, `access`, `author_id`, `lessons`, `techno`, `tier`, `step`, `stat_reports`, `stat_videos`, `stat_stars`, `stat_lessons`, `stat_duration`, `is_active`) VALUES
(1, 'Наноигры', 'game1', 'Четыре нано-игрушки, по два урока на каждую: арканоид, скорость реакции, цифры и карточки памяти.', 'game1', 1, 10, 'sharp', 1, 1030, 2394, 114, 4.88, 10, '05:26:37', 1),
(5, 'Нанософт', 'soft1', 'Восемь прикладных программ на C#. На первом уроке создаётся "Портфолио", которое потом пополнится нано-программами, созданными на следующих уроках.', 'soft1', 1, 10, 'sharp', 1, 1040, 1694, 62, 4.84, 10, '07:23:35', 1),
(6, 'Микроигры', 'game2', 'Пять динамических микроигрушек, по три урока на каждую: пятнашки, луноход, машинка/стрелялка, крестики-нолики, а также игра 2048.', 'game2', 4004, 15, 'sharp', 2, 2010, 1043, 97, 4.93, 16, '09:29:39', 2),
(7, 'Новые технологии', 'soft2', 'Практическое знакомство с различными технологиями и методиками программирования: делегаты, потоки, нити, клиент-сервер, построение графиков, запись/воспроизведение голоса и многое другое. ', 'soft2', 1, 15, 'sharp', 3, 2085, 889, 29, 4.92, 15, '11:00:17', 2);

-- --------------------------------------------------------

--
-- Структура таблицы `lessons`
--

CREATE TABLE IF NOT EXISTS `lessons` (
  `id` int(11) NOT NULL,
  `course_id` int(11) NOT NULL DEFAULT '1',
  `lesson` varchar(255) NOT NULL COMMENT 'Название урока',
  `intro` varchar(255) NOT NULL COMMENT 'Вступительный текст',
  `tasks` varchar(255) NOT NULL COMMENT 'Домашнее задание по пунктам, каждый пункт на отдельной строке!',
  `video` varchar(255) NOT NULL COMMENT 'youtube код видео',
  `status` varchar(255) NOT NULL COMMENT 'show / hide',
  `step` int(11) DEFAULT '0' COMMENT 'Порядковый номер',
  `checking` varchar(255) NOT NULL DEFAULT 'need' COMMENT 'need / skip',
  `video_length` time DEFAULT NULL,
  `copy_id` int(11) DEFAULT NULL,
  `demo` int(11) DEFAULT NULL,
  `need_lesson_ids` varchar(255) DEFAULT NULL,
  `tofill` varchar(255) DEFAULT NULL,
  `packet` varchar(255) DEFAULT NULL,
  `opencode` varchar(255) DEFAULT NULL
) ENGINE=InnoDB AUTO_INCREMENT=1785 DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `lessons`
--

INSERT INTO `lessons` (`id`, `course_id`, `lesson`, `intro`, `tasks`, `video`, `status`, `step`, `checking`, `video_length`, `copy_id`, `demo`, `need_lesson_ids`, `tofill`, `packet`, `opencode`) VALUES
(8, 5, 'Шахматные часы', 'На этом уроке мы попрактикуемся в ООП - \r\nопишем объект для часов и создадим от него\r\nдва экземпляра, для левых и для правых часов.\r\n\r\n<b>Задание:</b>\r\nНаписать программу «Шахматные часы».\r\n', 'Составить интерфейс программы: название, иконка.\r\nСоздать класс Clock.\r\nПротестировать два способа подсчёта времени (по желанию).\r\nВыбрать способ переключения часов и реализовать его.\r\nПодключить часы к интерфейсу.\r\nДовести программу до рабочей версии.\r\nС', 'H8p2oud9Pno', 'show', 29, 'skip', '00:40:35', NULL, 0, '', '', 'soft1', ''),
(9, 5, 'Карточка паролей', 'Сегодня мы напишем маленькую, но полезную утилиту для хранения паролей, которая сможет облегчить процесс ввода паролей на разные сайты. Конечно, есть много таких программ, но не забывай, наша цель: писать свои программы!\r\nВнимание!\r\nТаких как ты — только ', 'Составить список из нескольких сайтов с логинами и паролями. \r\nСоздать программу на C#. \r\nУстановить иконку как для программы, так и для формы, вписать название. \r\nУбрать кнопки Maximize, Minimize, сделать форму статичную (нельзя менять размер). \r\nРазмест', '61qqwC0FPT8', 'hide', 12, 'skip', '00:33:33', NULL, 0, '', '', 'soft1', ''),
(11, 5, 'Баскетбольное табло', 'На этом уроке мы попрактикуемся в создании двух форм и передаче данных между ними.\r\n\r\n<b>Задание:</b>\r\nНаписать программу для управления баскетбольным табло.\r\nВыводить результаты на весь экран большими цифрами.\r\n', 'Создать проект, дать название, установить иконки.\r\nНарисовать форму панели управления по примеру.\r\nСоздать вторую форму и оформить её.\r\nВсе компоненты форм должны быть аккуратно расположены, иметь характерные имена.\r\nОбеспечить передачу данных из одной фо', 'bJ9lOCMIruA', 'show', 29, 'skip', '00:45:35', NULL, 0, '', '', 'soft1', ''),
(12, 1, 'Игра Цифры', 'На этом уроке мы напишем игрушку «Цифры».\r\nПознакомимся с компонентом MenuStrip, и приручим кучу кнопок.\r\nПараллельно воспользуемся конструкцией языка switch - case.\r\n\r\n<b>Задание:</b>\r\nСоздать программу с 9 кнопками, которые нужно нажимать по порядку.\r\n\r', 'Составить интерфейс программы: название, иконка.\r\nСделать меню, прописать горячие клавиши.\r\nРазместить 9 кнопок внутри компонента TableLayoutPanel\r\nНаписать функцию button (int nr) для получения кнопки по её номеру.\r\nДовести программу до рабочей версии.\r\n', 'VHlDW52iGG0', 'show', 143, 'skip', '00:23:10', NULL, 0, '', '', 'game1', ''),
(13, 1, 'Бот для Цифр', 'На этом уроке мы напишем бота для игры из прошлого урока.\r\nМы научим мышку быстро щёлкать по кнопкам программы из прошлого урока.\r\n\r\n<b>Задание:</b>\r\nНаписать бота для игры из прошлого урока.\r\nПридумать, для чего можно использовать эту программу.\r\n\r\nПриме', 'Подготовить форму: иконка, название, два текстовых поля, три кнопки.\r\nОбработка кнопки "Сброс".\r\nОбработка кнопки "Добавить".\r\nОбработка кнопки "Повторить".\r\nПротестировать работу на программе "Цифры".\r\nПридумать и написать возможности применения этой про', 'gBo_Q49kxeQ', 'show', 154, 'skip', '00:15:40', NULL, 0, '', '', 'game1', ''),
(14, 6, 'Крестики-Нолики. Игра на двоих', 'Играл в крестики-нолики, мелом на асфальте? \r\nЯ играл, и очень много, был непревзойдённым профессионалом \r\nв своём дворе, изучил все ходы-выходы в этой программе, \r\nи замахнулся на создание искусственного интеллекта! :)\r\nИгрушка не сложная, она отлично по', 'Написать игру Крестики-Нолики.\r\nПротестировать работу программы.', 'EVfjMCDQANk', 'show', 234, 'skip', '00:40:36', NULL, 0, '', '', 'game2', ''),
(19, 6, 'VIP урок. Стрелялка', 'Сегодня мы напишем классический одноэкранный шутер.\r\nБудет лететь самолётик и сбивать шарики.\r\nНа примере простых объектов демонстрация основ ООП.', 'Найти картинки для самолёта, шарика и пульки.\r\nСоздать форму, панель, разместить картинки.\r\nСоздать класс Ship для самолёта.\r\nСделать чтобы самолёт двигался за мышкой.\r\nСоздать класс Ball для шарика.\r\nСделать, чтобы шарик сам летал по полю через таймер.\r\n', 'zFXf14GkCX0', 'show', 1783, 'skip', '01:33:59', NULL, 0, '', '', 'game2', ''),
(40, 5, 'Библиотека твоих программ', 'Хочешь создать свой собственный, крупный проект?\r\nНа этом уроке мы заложим основу твоего первого крупного проекта - \r\nПортфолио, которое соберёт в себя все твои лучшие программы.\r\nЭтот проект будет расширяться по мере создания новых программ,\r\nне забывай ', 'Выбрать несколько программ для размещения в портфолио.\r\nСоздать проект по своей фамилии, добавить иконку.\r\nДобавить компонент TabControl и создать три вкладки.\r\nРазместить PictureBox и TextBox на первой и второй вкладке.\r\nСделать запуск внешнего exe-файла', 'DPTBsGZDzrk', 'hide', 5, 'skip', '00:32:54', NULL, 0, '', '', 'soft1', ''),
(44, 7, 'Клиент-сервер для смены обоев', 'Создание клиент-серверного приложения для удалённой смены фоновой картинки на рабочем столе.\r\nНа компьютере "жертве" стоит клиентская программа, которая подключается к серверу за получением ссылки на скачивание картинки, которую следует разместить на рабо', 'Найти 5 урл-адресов на JPG-картинки и создать файл paper.txt\r\nСоздать серверное консольное приложение.\r\nСоздать класс Server\r\nНаписать функцию для считывания линка с конфиг-файла\r\nНаписать функцию для создание серверного сокета.\r\nСоздать клиентское прилож', 'MXfN6dP6cIc', 'show', 54, 'skip', '01:00:07', NULL, 0, '', '', 'soft2', ''),
(45, 7, 'Обои рабочего стола', 'Составляем программу - менеджер фоновых рисунков для рабочего стола.', 'Создать проект.\r\nПодготовить несколько красивых картинок для обоев рабочего стола.\r\nСоздать интерфейс пользователя - красиво разместить, дать имена.\r\nНаписать функцию для установки фонового рисунка.\r\nНаписать функцию чтения папки с картинками и добавления', 'frM5bDs4ejs', 'show', 50, 'skip', '01:00:58', NULL, 0, '', '', 'soft2', ''),
(46, 5, 'Средняя оценка', 'На этом уроке мы узнаем секрет гениального интерфейса.\r\nДля этого программа должна быть максимально простой и удобной.\r\nЖелающие смогут потренироваться в использовании делегатов.\r\n\r\n<b>Задание:</b>\r\nНаписать программу для вычисления средней оценки.', 'Создать форму.\r\nРазместить TableLayoutPanel формата 4 x 2.\r\nРазместить кнопки и метки.\r\nСоздать класс Note для добавления оценок и вычисления средней.\r\nСоздать обработку событий после нажатия каждой кнопки\r\nДобавить компонент ToolTip и прописать подсказки', '_H3vjSomPZk', 'show', 162, 'skip', '00:25:51', NULL, 0, '', '', 'soft0', 'avg'),
(48, 5, 'Расписание уроков', 'Видеоурок по созданию программы для расписания уроков.\r\nИспользуется визуальный компонент DataGridView.\r\nРасписание сохраняется в текстовый файл, \r\nоткуда считывается при запуске программы.', 'Создать форму.\r\nРазместить компонент DataGridView.\r\nДобавить нужное кол-во столбцов, настроить внешний вид.\r\nНаписать функцию для сохранения расписания в текстовый файл.\r\nНаписать функцию для считывания расписания из текстового файла.\r\nДоделать программу,', 'zRRHAeMUsw8', 'show', 50, 'skip', '00:54:35', NULL, 0, '', '', 'soft1', ''),
(61, 7, 'Делегаты на кубиках', 'На этом уроке подробно показываю и объясняю, \r\nчто такое делегаты, зачем они нужны и как их использовать.', 'Добавить три визуальных компонента для отображения кубиков.\r\nИмпортировать картинки с кубиками в проект.\r\nСоздать класс Dice.\r\nСоздать и реализовать три функции для отображения кубиков.\r\nОписать делегат.\r\nДобавить делегат в класс Dice - в описание и в кон', 'J1vioKaeWTs', 'show', 29, 'skip', '00:47:37', NULL, 1, '', '', 'soft2', ''),
(62, 7, 'Нити на кубиках', 'Демонстрация использования потоков с делегатами на примере игральных кубиков.\r\n<cut>\r\n<b>Примечание</b>\r\nЧтобы не появлялась ошибка, необходимо останавливать потоки: \r\n<pre>private void Form1_FormClosed(object sender, FormClosedEventArgs e)\r\n{\r\n    dice1.', 'Создать два кубика.\r\nЗапустить их через таймер.\r\nСоздать функцию Run в классе Dice.\r\nСделать запуск потока внутри класса Dice.\r\nДобавить Invoke в каждый метод отображения кубиков.\r\nУбрать таймер.\r\nСделать потоки фоновыми.\r\nПротестировать работу программы.', 'R7cR6-u_UwQ', 'show', 33, 'skip', '00:42:59', NULL, 1, '', '', 'soft2', ''),
(75, 7, 'Печать таблицы + экспорт в Excel', 'Как вывести на печать таблицу.\r\nКак экспортировать таблицу в Excel\r\nСамый простой и быстрый способ.', 'Разместить таблицу и две кнопки.\r\nРазместить WebBrowser\r\nПротестировать печать простой формы\r\nНаписать функцию для печати таблицы\r\nНаписать функцию для экспорта таблицы в Excel', 'kHsFRtdxMdk', 'show', 271, 'skip', '00:38:16', NULL, 0, '', '', 'soft2', ''),
(76, 5, 'Скорость на клавиатуре', 'На этом уроке я расскажу о программе <a href="http://ergosolo.ru">Соло на клавиатуре</a>,\r\nкоторую я в мазохистском запале прошёл СЕМЬ РАЗ и даже был <a href=''http://ergosolo.ru/soloist/best/2004/volosatov/''>Солистом 2004 года</a>.\r\nМы потренируемся в исп', 'Нарисовать интерфейс программы + иконка.\r\nДать правильные имена всем элементам интерфейса.\r\nСделать функцию Init со считыванием строчки из файла.\r\nДобавить на форму таймер.\r\nСделать обработчики событий на клавиатуру и на таймер.\r\nНаписать функцию ShowStat', '1lIqFycUk8U', 'show', 51, 'skip', '00:32:18', NULL, 0, '', '', 'soft1', ''),
(83, 7, 'VIP урок - Создание архиватора - 1 часть', 'Архиватор - это программа, которая несколько файлов собирает в один. \r\nБез сжатия. Сжатием занимается компрессор.\r\nНа этом уроке мы начнём писать архиватор.\r\n', 'Создать интерфейс программы\r\nСоздать класс Archiver\r\nРеализовать заглушки для всех методов\r\nРеализовать метод Create', '5GcJzissZOg', 'show', 625, 'skip', '00:39:44', NULL, 0, '', '', 'soft2', ''),
(89, 7, 'Построение графиков', 'Рано или поздно любому программисту приходится строить графики.\r\nЧтобы не изобретать велоиспед - лучше воспользоваться готовым решением.\r\nНа уроке мы установим библиотеку ZedGraph и познакомимся с её возможностями.\r\nНастроим оси координат, легенду, добави', 'Установить компонент ZedGraph: http://zedgraph2.codeplex.com/releases/view/18873\r\nНаписать функцию init() и настроить поле для графика.\r\nНаписать функцию fn1() для вывода первого графика.\r\nНастроить сетку координат - параметры MajorGrid и MinorGrid для ка', 'ZT-OsCnH5QE', 'show', 279, 'skip', '01:10:27', NULL, 0, '', '', 'soft2', ''),
(93, 7, 'Работа с WinAPI', 'Использование функций WinAPI для поиска и закрытия окон.', 'Создать форму\r\nНайти форум с примером использования WinAPI\r\nСкопировать определения\r\nСкопировать функции\r\nПроверить работу программы на Калькуляторе.', '1vR2K3rnaac', 'show', 177, 'skip', '00:49:53', NULL, 0, '', '', 'soft2', ''),
(111, 7, 'VIP урок. C# + MySQL через DataSet', 'Установка и настройка MySQL.\r\nСоздание базы данных.\r\nСоздание подключения.\r\nВсё необходимое для начала работы с базой данных, с нуля.', 'Установить EasyPHP\r\nЗапустить MySQL\r\nСоздать базу данных через менеджер.\r\nУстановить MySQL Connector.\r\nПодключить C# к базе данных.\r\nДобавить DataGridView и настроить его.\r\nНаписать код для загрузки данных в grid.\r\nНаписать код для обновления данных.\r\nСде', 'gDAxvouoEss', 'show', 602, 'skip', '00:45:50', NULL, 0, '', '', 'soft2', ''),
(143, 1, 'Арканоид - Шарик и кирпичики', 'Делаем движение шарика, отскок его от стен и ракетки, а также выбивание кирпичиков.', 'Алгоритм перемещения шарика\r\nАлгоритм отскока от ракетки\r\nАлгоритм выбивания кирпичика\r\nПодсчёт выбитых кирпичиков\r\nЗавершение игры\r\nДобавить в игру что-нибудь своё', 'p8e0SAuZl-M', 'show', 19, 'skip', '01:02:53', NULL, 1, '', '', 'game1', ''),
(144, 1, 'Арканоид - Уровень и ракетка', 'Создаём старую добрую игру Арканоид.\r\nСоздаём меню, рисуем уровень, размещаем ракетку.\r\nДелаем, чтобы ракетка двигалась.', 'Создать экран меню\r\nДобавить кнопку Старт\r\nСоздать экран для игры\r\nРазместить ракетку\r\nРазместить шарик\r\nРазместить кирпичики\r\nАлгоритм перемещение ракетки', 'nFaAPDMEkAc', 'show', 18, 'free', '00:50:25', NULL, 1, '', '', 'game1', ''),
(145, 5, 'Прохождение теста', 'На этом уроке мы создадим программу для организации тестов,\r\nнапишем алгоритм загрузки вопросов и вариантов ответов из файла,\r\nбудем их перемешивать, проверять ответы, подсчитывать результаты.\r\n\r\n<b>Задание:</b>\r\nПридумать 5 вопросов и написать тестирующу', 'Придумать 5 вопросов с 3 вариантами ответов.\r\nПодготовить форму, добавить иконку.\r\nЗагрузить вопросы с ответами из файла.\r\nВывести вопрос с указанным номером.\r\nОрганизовать переход к следующему вопросу.\r\nСделать проверку выбранного ответа.\r\nРассчитать и п', 'z4srEsjIAyI', 'show', 30, 'skip', '01:07:18', NULL, 0, '', '', 'soft1', ''),
(148, 1, 'VIP - Карточки памяти - Подготовка', 'На последних двух уроках этого раздела мы напишем «Карточки памяти».\r\nНа форме будет 16 карточек из 8 парных картинок.\r\nЦель игры - попарно открыть все карточки.\r\n\r\n<b>Задание:</b>\r\nПодготовить картинки, настроить форму, сделать меню.\r\nРазместить сетку, н', 'Подготовить 9 картинок.\r\nПодготовить иконку.\r\nПодготовить тексты с правилами игры и об авторе.\r\nСоздать и настроить форму.\r\nДобавить и настроить меню.\r\nСоздать функцию для трёх пунктов меню.\r\nРазместить сетку 4 на 4.\r\nРазместить 16 картинок.\r\nПрислать скр', '_msaljkcVqg', 'show', 275, 'skip', '00:28:24', NULL, 0, '', '', 'game1', ''),
(149, 1, 'VIP - Карточки памяти - Алгоритм', 'На этом уроке мы сначала нарисуем блок-схему алгоритма игры,\r\nа потом создадим нужные функции и соберём это всё вместе,\r\nчтобы получилось законченная игровая программа.\r\n\r\n<b>Задание:</b>\r\nНарисовать блок схему и написать игру.', 'Перерисовать блок схему от руки, обдумывая каждый этап.\r\nПрописать Tag поля для всех картинок\r\nНаписать функции для отображения картинок.\r\nНаписать функцию инициализации.\r\nСоздать функции show, hide, open.\r\nСоздать функции обработки каждого режима.\r\nПроте', 'sdbcH5z2Vi8', 'show', 630, 'skip', '00:55:50', NULL, 0, '', '', 'game1', ''),
(150, 6, 'Игра 15 - Кнопки', 'Создание известной игры «Пятнашки» — отличное упражнение для начинающих программистов.\r\nНа первом уроке мы создадим интерфейс игры и разместим все кнопки.\r\nНа втором уроке мы напишем класс логики игры и допишем программу.\r\nНа третьем уроке мы вместо кнопо', 'Создать проект.\r\nУстановить иконку.\r\nРазместить TableLayoutviewer и настроить его.\r\nРазместить 16 кнопочек и настроить их.\r\nСоздать одну функцию на нажатие любой кнопки.\r\nНаписать функцию button (int nr).\r\nПриложить скриншот формы с кнопками на фоне VS.', 'pSgq6QtcoDc', 'show', 27, 'free', '00:13:41', NULL, 1, '', '', 'game2', ''),
(151, 6, 'Игра 15 - Алгоритм', 'Завершаем создание игры Пятнашки.\r\nНа втором уроке мы напишем класс логики игры, в котором опишем матрицу для хранения чисел на кнопках и реализуем основные методы: start, shift, check_numbers и другие.\r\n', 'Создать класс Game\r\nСоздать вспомогательные функции coords_to_position и position_to_coords.\r\nСоздать функцию start дли инициализации матрицы.\r\nСоздать функцию shift для выполнения хода.\r\nСоздать функцию shift_random для случайного хода.\r\nСоздать функцию ', '9aSWLR7n3_k', 'show', 28, 'skip', '00:42:15', NULL, 1, '', '', 'game2', ''),
(152, 6, 'Игра 15 - Картинка', 'Переделываем игру Пятнашки в Пазл картинки.\r\nУбираем кнопки, вместо них динамически размещаем матрицу PictureBox''ов,\r\nв которые загружаем кусочки картинки, предварительно разрезав их\r\nи сохранив все части картинки в матрицу Image.\r\nРазмер поля можно будет', 'Сохранить прежнюю версию игры 15 в отдельную папку.\r\nУдалить кнопки и сетку, добавить панель.\r\nДобавить пункты меню для выбора уровня.\r\nСоздать матрицу PicterBox''ев и динамически разместить их на форме.\r\nСоздать матрицу Image, разрезать картинку и помести', 'As1bRaO3zBk', 'show', 31, 'skip', '00:36:03', NULL, 1, '', '', 'game2', ''),
(153, 6, '2048 - Учимся играть', 'Начинаем создание модной игры 2048.\r\nНо сначала нужно научиться в неё играть.\r\nЭто можно сделать здесь: http://flagames.ru/game/2048', 'Научиться играть в игру 2048.\r\nНабрать 1024 или 2048, можно больше.\r\nПриложить скриншот со своим результатом.\r\n', '9JyGeItK-dU', 'show', 151, 'skip', '00:08:33', NULL, 1, '', '', 'game2', ''),
(154, 6, '2048 - Интерфейс', 'На этом уроке мы создадим интерфейс программы.\r\nДинамически создадим Label для цифр и разместим их в матрицу.\r\nРаскрасим кнопочки и создадим обработчик курсорных клавиш.', 'Создать форму с иконкой.\r\nРазместить TableLayoutPanel и Label.\r\nСоздать функцию InitLabels и CreateLabel.\r\nСоздать функцию Show.\r\nСоздать функцию InitBackColors.\r\nДобавить обработчик для курсорных клавиш.\r\nСделать скриншот запущенной программы с цветными ', 'wT0_1QtfKzA', 'show', 152, 'skip', '00:39:12', NULL, 1, '', '', 'game2', ''),
(155, 6, '2048 - Смещение', 'На этом уроке мы реализуем класс с логикой игры.\r\nДалее, напишем заглушки для функций смещения клеток\r\nи функцию проверки окончания игры game_over().', 'Создать заготовку для класса.\r\nНаписать функцию add_numbers().\r\nПрименить делегат и проверить работу.\r\nНаписать функции shift_*().\r\nНаписать функцию game_over().\r\nДобавить вызов функций при нажатии клавиш.\r\nПроверить работу программы и приложить скриншот.', 'HINn6z78AQE', 'show', 163, 'skip', '00:24:30', NULL, 0, '', '', 'game2', ''),
(198, 6, 'VIP урок. Формула 1', 'Создаём динамический графический объект - машинку.\r\nЕздит по экрану. Поворачивает. Восемь направлений. \r\nРазгоняется и тормозит. Задний ход.\r\n<cut>\r\nПоправка: в функции ride () градусы переводятся в радианы, а не наоборот.', 'Нарисовать восемь картинок с различными направлениями машинки.\r\nСоздать программу, которая выводит двигающуюся машинку.\r\nСделать обработку нажатых клавиш.\r\nРеализовать поворты, разгон и торможение.', 'esAxOJIXfOk', 'show', 392, 'skip', '00:41:47', NULL, 0, '', '', 'game2', ''),
(202, 5, 'Твоё портфолио', 'Хочешь создать свой собственный, крупный проект?\r\nНа этом уроке мы заложим основу твоей супер-программы — \r\nПортфолио, которое соберёт в себя все твои лучшие программы.\r\nЭтот проект будет расширяться по мере создания новых программ.\r\n\r\n<b>Задание:</b>\r\nСо', 'Выбрать несколько программ для размещения в портфолио.\r\nСоздать проект по своей фамилии, добавить иконку.\r\nДобавить компонент TabControl и создать три вкладки.\r\nРазместить PictureBox и TextBox на первой и второй вкладке.\r\nСделать запуск внешнего exe-файла', 'UWr74Y3Y_Jw', 'show', 4, 'skip', '00:56:30', NULL, 0, '', '', 'soft1', ''),
(255, 7, 'Мотиватор', 'На этом уроке мы научимся загружать картинку и рисовать на ней.\r\nРезультаты стараний отобразим на экране и сохраним в файл.', 'Найти мотиватор и удалить с него текст.\r\nЗагрузить мотиватор в объект Image и отобразить на экране.\r\nСоздать графику и нарисовать через неё линию.\r\nСоздать объект для шрифта.\r\nВывести на картинку строчку текста.\r\nВывести вторую строчку текста шрифтом мень', 'LNDep3_pQwc', 'show', 64, 'skip', '00:31:12', NULL, 0, '', '', 'soft2', ''),
(273, 1, 'Скорость реакции. Блок-схема', 'На этом уроке мы составим блок-схему\r\nдля игры по вычислению скорости реакции.\r\nНам потребуются три картинки, листик и ручка.', 'Выбрать три картинки для программы.\r\nВыписать все элементы будущей программы.\r\nНарисовать аккуратную блок-схему.\r\nПриложить к отчёту скриншот выбранных картинок.\r\nПриложить к отчёту фото нарисованной блок-схемы.\r\n', 'ofq_-JDQPWg', 'show', 26, 'skip', '00:17:22', NULL, 0, '', '', 'game1', ''),
(274, 1, 'Скорость реакции. Три картинки по таймеру', 'На этом уроке мы подготовим форму для программы.\r\nУстановим иконку, разместим три картинки, кнопку запуска.\r\nНапишем демо-код для переключения картинок.', 'Создать форму и настроить её: иконка, название и т.д.\r\nДобавить три картинки в ресурсы проекта.\r\nРазместить три PcitureBox''a и загрузить в них картинки.\r\nРазместить кнопку Запуск.\r\nНаписать метод ShowCard (int nr).\r\nСоздать событие таймера и сделать перек', 'ZPK7KQDAyHY', 'show', 91, 'skip', '00:15:28', NULL, 0, '', '', 'game1', ''),
(275, 1, 'Скорость реакции. Алгоритм и рекорд', 'На этом уроке мы наконец-таки создадим программу\r\nвычисления скорости реакции, следуя блок-схеме.\r\nНапишем обработчик кнопки "Запуск", кликов по картинкам и таймера.\r\nДаже добавить прогресс-бар для наглядности.', 'Описать все переменные.\r\nНаписать метод запуска игры.\r\nНаписать метод NextClick().\r\nНаписать обработку клика по картинкам.\r\nДобавить ProgressBar и менять ползунок при каждом клике.\r\nПобить мой рекорд 0.460 и поставить свой собственный.\r\nПриложить скриншот', 'tg8ksX-Wqa0', 'show', 123, 'skip', '00:34:02', NULL, 0, '', '', 'game1', ''),
(277, 6, 'ФИНАЛЬНЫЙ УРОК', 'Задание:\r\nЗаписать видео обзор любой игры, созданной на этом курсе.\r\n<cut>\r\n<h2>Поздравляю!</h2>\r\nТы прошёл все уроки курса «Микроигры».\r\nА это значит, что ты — победитель!\r\nТы — упорный, настойчивый и целеустремлённый Программист!\r\nНаверняка, тебе есть ч', 'Собрать архив всех программ этого видеокурса.\r\nЗаписать видео обзор программы и выложить на Youtube.\r\nКакой курс ты будешь проходить следующим?', 'WRYuzGs7tJA', 'show', 300, 'skip', '00:23:23', NULL, 0, '', '', 'game2', ''),
(278, 6, 'ПОЛУФИНАЛЬНЫЙ УРОК', '<b>Задание.</b>\r\nЗаписать видеообзор любой программы из первой части этого курса.\r\n<cut>\r\n<b>Молодец!</b>\r\nПоловина пути позади.\r\nДля того чтобы отчитаться за эту половину - \r\nнужно снова попрактиковаться в записи видеообзоров.\r\n\r\nИнструкцию по созданию в', 'Собрать архив всех программ этого видеокурса.\r\nЗаписать видео обзор программы и выложить на Youtube.', 'WRYuzGs7tJA', 'show', 56, 'skip', '00:23:23', NULL, 0, '', '', 'game2', ''),
(279, 7, 'Полуфинальный урок. Отзыв о курсе', '<b>Задание:</b>\r\nПосмотрите видеообзор об этом курсе Елены Вставской.\r\nОна подробно рассказывает о программах, которые вы уже написали - \r\nпосмотрите, какие могли быть сложности и как с ними справиться.\r\nЗадание.\r\nНаписать отзыв об этом видео-курсе,\r\nприк', 'Написать отзыв.\r\nПрикрепить фотографию.\r\nВ отзыве написать имя и фамилию.', 'xTBuaNmwbv8', 'show', 59, 'skip', '00:08:08', NULL, 0, '', '', 'soft2', ''),
(291, 1, 'ФИНАЛЬНЫЙ УРОК', '<b>Задание.</b>\r\nЗаписать видеообзор любой своей программы.\r\n<cut>\r\n<h2>Поздравляю!</h2>\r\nТы прошёл все уроки курса «Нано-игры».\r\nМеньше 1% от всех участников доходят до этого рубежа,\r\nа это значит, что ты - победитель, \r\nты — упорный, настойчивый и целеу', 'Собрать архив всех программ этого видеокурса.\r\nЗаписать видео обзор программы и выложить на Youtube.\r\nКакой курс ты будешь проходить следующим?', 'WRYuzGs7tJA', 'show', 274, 'skip', '00:23:23', 277, 0, '', '', 'game1', ''),
(292, 5, 'ФИНАЛЬНЫЙ УРОК', '<b>Задание:</b>\r\nЗаписать видеообзор любой программы из этого курса.\r\n<cut>\r\n<h2>Поздравляю!</h2>\r\nТы прошёл все уроки курса «Прикладные».\r\nТолько 1.7% от всех участников доходят до этого рубежа,\r\nи ты — упорный, настойчивый и целеустремлённый Программист', 'Собрать архив всех программ этого видеокурса.\r\nЗаписать видео обзор программы и выложить на Youtube.\r\nКакой курс ты будешь проходить следующим?', 'WRYuzGs7tJA', 'show', 277, 'need', '00:23:23', 277, 0, '', '', 'soft1', ''),
(297, 7, 'ФИНАЛЬНЫЙ УРОК', 'Задание:\r\nЗаписать видеообзор пары своих программ из курса Новые технологии. \r\n<cut>\r\n<h2>Поздравляю!</h2>\r\nТы выполнил все уроки Новых технологий!\r\nТы полностью завершил этот видеокурс!\r\nТы — <b>ПОБЕДИТЕЛЬ</b>, \r\nТы — упорный, настойчивый и целеустремлён', 'Собрать архив всех программ этого видеокурса.\r\nЗаписать видео обзор программы и выложить на Youtube.\r\nКакой курс ты будешь проходить следующим?', 'WRYuzGs7tJA', 'show', 280, 'need', '00:23:23', 60, 0, '', '', 'soft2', ''),
(329, 7, 'Телефон по TCP/IP протоколу', 'На этом видеоуроке мы создадим три класса, которые удобно\r\nиспользовать для передачи данных между двумя компьютерами.', 'Создать базовый класс Phone.\r\nСоздать простую версию классов PhoneServer и PhoneClient.\r\nПротестировать работу этих классов.\r\nДобавить в базовый класс Phone функцию Start для вызова нити.\r\nПеределать функцию Recv через делегат.\r\nПротестировать работу клас', 'UiwkQ0k7cew', 'show', 47, 'skip', '00:47:44', 172, 0, '', '', 'soft2', ''),
(392, 6, 'Крестики-Нолики. Игра с компьютером', 'На этом уроке мы добавим в игру Крестики-Нолики искуственный интеллект. \r\nМы напишем алгоритм, который будет искать наилучший ход для позиции.', 'Сделать генератор случайных ходов.\r\nРеализовать искственный интеллект.\r\nПриложить скриншот победы над ИИ.', 'pBMqwCF3L0c', 'show', 235, 'skip', '00:49:33', NULL, 0, '', '', 'game2', ''),
(444, 5, 'VIP урок. Работа с WinAPI', 'Использование функций WinAPI для поиска и закрытия окон.', 'Создать форму\r\nНайти форум с примером использования WinAPI\r\nСкопировать определения\r\nСкопировать функции\r\nПроверить работу программы на Калькуляторе.', '1vR2K3rnaac', 'show', 441, 'skip', '00:49:53', 93, 0, '', '', 'game6', ''),
(472, 7, 'Модульное тестирование', 'На этом уроке мы познакомимся с модульным тестированием.\r\nМы напишем небольшой калькулятор, в который добавим\r\nпроект для модульного тестирования, и покажем,\r\nкак это всё работает, как это нужно использовать.', 'Создать новый проект.\r\nНарисовать форму для калькулятора.\r\nСоздать класс Calc.cs с логикой калькулятора.\r\nСоздать обработчик для каждой кнопки на форме.\r\nСоздать проект для модульного тестирования.\r\nПереименовать класс и написать несколько тестовых функци', 'rtsfaQHawGE', 'show', 12, 'skip', '00:36:07', NULL, 0, '', '', 'soft2', ''),
(502, 5, 'Секундомер. Написание кода', 'На этому уроке мы вдохнём жизнь в нашу программу,\r\nнапишем все необходимые методы и обработчики событий.\r\n\r\n<B><a href=''/data/docs/task5.videosharp.zip'' target=''_blank''>Инструкция по созданию Секундомера</a></B>', '200 Создать две переменные\r\n210 Создать обработчик для buttonStart\r\n220 Написать метод StartTimer ()\r\n230 Написать метод StopTimer ()\r\n240 Написать метод AddNoteToGrid ()\r\n250 Написать метод SaveNoteToFile ()\r\n260 Создать обработчик для закрытия формы\r\n27', 'u4WzNTwDZko', 'hide', 218, 'skip', '00:31:52', 488, 0, '', '', 'soft1', ''),
(503, 5, 'Секундомер. Настройка формы', 'Наша цель - создать программу учёта рабочего времени,\r\nкоторая будет фиксировать, сколько времени уходит на каждую задачу.\r\n\r\nНа этом уроке мы создадим форму,\r\nразместим на ней и настроим все\r\nнеобходимые визуальные компоненты: \r\nlabelTime, textNotes, but', '100 Создать проект\r\n110 Переименовать форму\r\n120 Разместить Label\r\n130 Разместить TextBox\r\n140 Разместить Button\r\n150 Разместить DataGridView\r\n170 Разместить Timer\r\nПриложить скриншот программы', 'uDmRH0S05Kg', 'hide', 202, 'skip', '00:22:39', 487, 0, '', '', 'soft1', ''),
(602, 7, 'VIP урок - Создание архиватора - 2 часть', 'Продолжение урока по созданию архиватора.\r\nИспользуется FileStream, BinaryReader, BinaryWriter.\r\nПочитать о потоках можно здесь: http://kzachetu.ru/theory/4/112', 'Реализовать метод Open\r\nРеализовать метод AddFile\r\nРеализовать метод GetNames\r\nРеализовать метод ExtractAll\r\nПротестировать работу архиватора', 'WI-3sKdi_iQ', 'show', 626, 'skip', '00:57:52', NULL, 0, '', '', 'soft2', ''),
(630, 1, '695-8281', '<div></div>', '', '', 'hide', 641, 'need', NULL, NULL, 0, '', '', 'game1', ''),
(1583, 6, 'Аполлон. Главные герои', 'На этом уроке мы озвучим правила игры Аполлон.\r\nВыясним, какие у нас будут главные герои.\r\nТвоё самостоятельное задание -\r\nнарисовать на бумаге внешний вид игры\r\nсо всеми главными героями.\r\nКак ты это себе представляешь.', 'Просмотреть короткое видео.\r\nНарисовать на бумаге экран игры:\r\nПоверхность Луны.\r\nПриземляющаяся Ракета.\r\nВид работающих Двигателей у ракеты.\r\nНаша Земля на горизонте.\r\nЗвёздочки на небе.\r\nПриложить фото своего творчества.', 'nenVJ9u5Jc0', 'show', 52, 'skip', '00:07:08', 237, 0, '', '', NULL, ''),
(1584, 6, 'Аполлон. Законы физики', 'Корабль Аполлон прилуняется на Луну.\r\nНа этом уроке мы рассмотрим упрощённую\r\nфизическую модель этого процесса и\r\nвыпишем все параметры и все формулы,\r\nкоторые будут управлять этим процессом.', 'Проработать физическую модель, понять все формулы\r\nСоздать форму, разместить на ней корабль, гашетку и Луну.\r\nСоздать класс Ship и определить основные поля и методы.\r\nПриложить скриншот нарисованной формы и созданного класса.', '50vEPHfKDqE', 'show', 53, 'skip', '00:26:47', 245, 0, '', '', NULL, ''),
(1585, 6, 'Аполлон. Плавное прилунение', 'На этом уроке мы допишем игру Аполлон.\r\nСвяжем класс логики с интерфейсом.\r\nСделаем управление двигателем с помощью мышки.\r\nДобавим таймер, функцию отображения корабля.\r\nА также сообщение о конце игры и перезапуск игры.', 'Определить возможные статусы корабля \r\nСделать педальку для включения/отключения двигателя мышкой.\r\nДобавить таймер и выбирать действия в зависимости от состояния корабля.\r\nНаписать функцию ShowShip() для отображения корабля и статистики.\r\nСделать функции', '-ddPIVKv4v0', 'show', 55, 'skip', '00:55:16', 246, 0, '', '', NULL, ''),
(1780, 5, 'Делегаты на кубиках', 'На этом уроке подробно показываю и объясняю, \r\nчто такое делегаты, зачем они нужны и как их использовать.', 'Добавить три визуальных компонента для отображения кубиков.\r\nИмпортировать картинки с кубиками в проект.\r\nСоздать класс Dice.\r\nСоздать и реализовать три функции для отображения кубиков.\r\nОписать делегат.\r\nДобавить делегат в класс Dice - в описание и в кон', 'J1vioKaeWTs', 'show', 102, 'skip', '00:47:37', 61, 0, '', '', NULL, ''),
(1783, 6, '2048 Логика: часть 1', '<div></div>', '', '8ts7R0RbO-0', 'hide', 1784, 'skip', '00:21:27', NULL, 0, '', '', NULL, ''),
(1784, 6, '2048 - Объединение', 'На этом уроке мы напишем функции смещения и объединения клеток.\r\nДалее, пошагово выполним эти алгоритмы, чтобы понять принцип их работы.', 'Написать функцию shift() и combine().\r\nВыполнить пошагово эти функции, выяснить, как они работают.\r\nДобавить переменную moved в нужные места.\r\nДоработать функцию game_over().\r\n* Убрать TableLayoutPanel для повышения эффективности отображения.\r\n* Приложить', '2H9JZdiL2NM', 'show', 233, 'skip', '00:43:33', NULL, 0, '', '', NULL, '');

-- --------------------------------------------------------

--
-- Структура таблицы `migration`
--

CREATE TABLE IF NOT EXISTS `migration` (
  `version` varchar(180) NOT NULL,
  `apply_time` int(11) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `migration`
--

INSERT INTO `migration` (`version`, `apply_time`) VALUES
('m000000_000000_base', 1520263316),
('m180218_163554_create_user_table', 1520263321),
('m180218_173225_create_course_table', 1520263321),
('m180218_173720_create_lessons_table', 1520263322);

-- --------------------------------------------------------

--
-- Структура таблицы `user`
--

CREATE TABLE IF NOT EXISTS `user` (
  `id` int(11) NOT NULL,
  `pupil` varchar(255) DEFAULT NULL,
  `email` varchar(255) DEFAULT NULL,
  `password` varchar(255) DEFAULT NULL,
  `auth_key` varchar(255) DEFAULT NULL,
  `access_token` varchar(255) DEFAULT NULL,
  `status` varchar(255) DEFAULT NULL,
  `join_date` datetime DEFAULT NULL,
  `login_date` datetime DEFAULT NULL
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;

--
-- Дамп данных таблицы `user`
--

INSERT INTO `user` (`id`, `pupil`, `email`, `password`, `auth_key`, `access_token`, `status`, `join_date`, `login_date`) VALUES
(1, 'Евгений', 'admin', '21232f297a57a5a743894a0e4a801fc3', NULL, NULL, NULL, NULL, NULL);

--
-- Индексы сохранённых таблиц
--

--
-- Индексы таблицы `access`
--
ALTER TABLE `access`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `course`
--
ALTER TABLE `course`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `lessons`
--
ALTER TABLE `lessons`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `migration`
--
ALTER TABLE `migration`
  ADD PRIMARY KEY (`version`);

--
-- Индексы таблицы `user`
--
ALTER TABLE `user`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT для сохранённых таблиц
--

--
-- AUTO_INCREMENT для таблицы `access`
--
ALTER TABLE `access`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=3830;
--
-- AUTO_INCREMENT для таблицы `course`
--
ALTER TABLE `course`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=8;
--
-- AUTO_INCREMENT для таблицы `lessons`
--
ALTER TABLE `lessons`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=1785;
--
-- AUTO_INCREMENT для таблицы `user`
--
ALTER TABLE `user`
  MODIFY `id` int(11) NOT NULL AUTO_INCREMENT,AUTO_INCREMENT=2;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
